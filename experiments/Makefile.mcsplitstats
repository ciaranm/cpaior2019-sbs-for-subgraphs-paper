SHELL := /bin/bash
FILTER := -1
MODULUS := 1
INSTANCES_FILE := instances.txt
CATTER := cat
INSTANCES := $(shell cat $(INSTANCES_FILE) | $(CATTER) | cut -d' ' -f1 | if [[ $(FILTER) == -1 ]] ; then cat ; else awk "(NR % $(MODULUS)) == ($(FILTER) % $(MODULUS))" ; fi)
MCSPLIT_ALGORITHMS := \
	mcsplitdown14 \
	mcsplitdownbiasedrestarts14
ALL_ALGORITHMS := $(GLASGOW_ALGORITHMS) $(LAD_ALGORITHMS) $(VF2_ALGORITHMS) $(MCSPLIT_ALGORITHMS) $(GLASGOWLION_ALGORITHMS)
STACK_SPACE := 10485760
RESULTS := results

RUNTIMES = $(foreach i, $(INSTANCES), $(foreach a, $(ALL_ALGORITHMS), $(RESULTS)/stats/$i.runtime.$a ))

all : $(RUNTIMES)

dir-% :
	mkdir -p $(RESULTS) $(RESULTS)/$*

define MCSPLIT_ALGORITHM_template
$(RESULTS)/stats/%.runtime.$(1) : | dir-stats
	if grep -q ^COMPLETED $(RESULTS)/$(1)/$$*.out ; then \
	    grep '^CPU time (ms):' $(RESULTS)/$(1)/$$*.out | cut -d: -f2 | tr -d ' ' > $$@ ; \
	elif grep -q '^TIMEOUT' $(RESULTS)/$(1)/$$*.out ; then \
	    echo 'NaN' > $$@ ; \
	fi
	test -s $$@
endef

$(foreach a,$(MCSPLIT_ALGORITHMS),$(eval $(call MCSPLIT_ALGORITHM_template,$(a))))
