SHELL := /bin/bash
FILTER := -1
MODULUS := 1
INSTANCES_FILE := instances.txt
CATTER := cat
INSTANCES := $(shell cat $(INSTANCES_FILE) | $(CATTER) | cut -d' ' -f1 | if [[ $(FILTER) == -1 ]] ; then cat ; else awk "(NR % $(MODULUS)) == ($(FILTER) % $(MODULUS))" ; fi)
GLASGOW_ALGORITHMS := \
    glasgowdegreenorestartsnonogoods \
    glasgowantinorestartsnonogoods \
    glasgowrandomnorestartsnonogoods \
    glasgowbiasednorestartsnonogoods \
    glasgowdegreenorestartsnonogoodsdds \
    glasgowrandom \
    glasgowbiased \
    glasgowbiasednonogoods \
    glasgowbiasedconstant10000threads36v2 \
    glasgowbiasedconstant10000triggeredthreads36v2 \
    glasgowbiasedthreads36v2 \
    glasgowbiasedconstant1420triggeredthreads36v2 \

LAD_ALGORITHMS := pathlad
VF2_ALGORITHMS := vf2
RI_ALGORITHMS := ri
ALL_ALGORITHMS := $(GLASGOW_ALGORITHMS) $(LAD_ALGORITHMS) $(VF2_ALGORITHMS) $(RI_ALGORITHMS)
RESULTS := results

all : $(RESULTS)/runtimes.data $(RESULTS)/searchtimes.data $(RESULTS)/searchsizes.data

$(RESULTS)/runtimes.data :
	{ \
	    echo instance family sat $(ALL_ALGORITHMS) ; \
	    $(CATTER) $(INSTANCES_FILE) | if [[ $(FILTER) == -1 ]] ; then cat ; else awk "(NR % $(MODULUS)) == ($(FILTER) % $(MODULUS))" ; fi | while read i p t f ; do \
	        echo $$i $$f $$(cat $(RESULTS)/stats/$$i.sat || echo XXX ) $$(for a in $(ALL_ALGORITHMS) ; do cat $(RESULTS)/stats/$$i.runtime.$$a || echo XXX ; done ) ; \
	    done ; \
	} | tee $@

$(RESULTS)/searchtimes.data :
	{ \
	    echo instance family sat $(GLASGOW_ALGORITHMS) ; \
	    $(CATTER) $(INSTANCES_FILE) | if [[ $(FILTER) == -1 ]] ; then cat ; else awk "(NR % $(MODULUS)) == ($(FILTER) % $(MODULUS))" ; fi | while read i p t f ; do \
	        echo $$i $$f $$(cat $(RESULTS)/stats/$$i.sat || echo XXX ) $$(for a in $(GLASGOW_ALGORITHMS) ; do cat $(RESULTS)/stats/$$i.searchtime.$$a || echo XXX ; done ) ; \
	    done ; \
	} | tee $@

$(RESULTS)/searchsizes.data :
	{ \
	    echo instance family sat $(GLASGOW_ALGORITHMS) ; \
	    $(CATTER) $(INSTANCES_FILE) | if [[ $(FILTER) == -1 ]] ; then cat ; else awk "(NR % $(MODULUS)) == ($(FILTER) % $(MODULUS))" ; fi | while read i p t f ; do \
	        echo $$i $$f $$(cat $(RESULTS)/stats/$$i.sat || echo XXX ) $$(for a in $(GLASGOW_ALGORITHMS) ; do cat $(RESULTS)/stats/$$i.searchsize.$$a || echo XXX ; done ) ; \
	    done ; \
	} | tee $@

